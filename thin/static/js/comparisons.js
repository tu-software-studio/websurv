// Generated by CoffeeScript 1.7.1
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $(function() {
    var comparison_controller, h1;
    h1 = Array(10).join('#');
    comparison_controller = {
      current_input_counter: 0,
      current_group: 1,
      current_row: null,
      id_counter: 0,
      align_form_counter: 0,
      set_up_key_listener: function() {
        return $("body").on("keydown", function(e) {
          var _ref;
          if (_ref = e.which, __indexOf.call([37, 38, 39, 40], _ref) >= 0) {
            switch (e.which) {
              case 37:
                console.log("" + h1 + "left" + h1);
                return comparison_controller.updateSpan(aligned_form, comparison_controller.current_input_counter, "left");
              case 38:
                console.log("" + h1 + "up" + h1);
                return e.preventDefault();
              case 39:
                return console.log("" + h1 + "right" + h1);
              case 40:
                console.log("" + h1 + "down" + h1);
                return e.preventDefault();
            }
          }
        });
      },
      loop_through_aligned_forms: function() {
        var aligned_forms, letter, rowId, s, transcription, transcriptions, _i, _len, _results;
        aligned_forms = $("td.aligned-form");
        transcriptions = $("td.transcriptions");
        _results = [];
        for (_i = 0, _len = transcriptions.length; _i < _len; _i++) {
          transcription = transcriptions[_i];
          transcription = $(transcription);
          rowId = transcription.parent().attr("id");
          _results.push((function() {
            var _j, _len1, _ref, _results1;
            _ref = transcription.text();
            _results1 = [];
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              letter = _ref[_j];
              letter = $(letter);
              s = $("<span>").html(letter.selector);
              console.log(letter);
              _results1.push($("tr#" + rowId).children("td.aligned-form").append(s));
            }
            return _results1;
          })());
        }
        return _results;
      },
      set_up_inputs: function() {
        console.log("Adding listeners to inputs for comparison entries...");
        return $("body").on("click", "tr.trans-form", function(e) {
          console.log(e.target);
          return comparison_controller.current_row = e.target;
        });
      },
      add_ids_to_rows: function() {
        var row, rows, _i, _len, _results;
        rows = $(".trans-form");
        _results = [];
        for (_i = 0, _len = rows.length; _i < _len; _i++) {
          row = rows[_i];
          row = $(row);
          row.attr("id", "" + comparison_controller.id_counter);
          _results.push(comparison_controller.id_counter++);
        }
        return _results;
      },
      updateSpan: function(aligned_form, index, direction) {}
    };
    comparison_controller.add_ids_to_rows();
    comparison_controller.loop_through_aligned_forms();
    comparison_controller.set_up_key_listener();
    return comparison_controller.set_up_inputs();
  });

}).call(this);

//# sourceMappingURL=comparisons.map
